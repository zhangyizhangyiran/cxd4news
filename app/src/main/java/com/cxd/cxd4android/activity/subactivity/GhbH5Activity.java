package com.cxd.cxd4android.activity.subactivity;import android.Manifest;import android.app.Activity;import android.app.AlertDialog;import android.content.DialogInterface;import android.content.Intent;import android.content.pm.PackageManager;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.text.TextUtils;import android.util.Log;import android.view.KeyEvent;import android.view.View;import android.view.WindowManager;import android.widget.TextView;import android.widget.Toast;import com.cxd.cxd4android.R;import com.cxd.cxd4android.global.GhbJsInterface;import com.cxd.cxd4android.global.WebViewActivity;import com.cxd.cxd4android.model.GhbH5Model;import com.cxd.cxd4android.widget.ImageUtil;import com.cxd.cxd4android.widget.MyWebChomeClient;import com.cxd.cxd4android.widget.PermissionUtil;import com.cxd.cxd4android.widget.X5WebView;import com.micros.ui.webview.X5WebViewDownLoadListener;import com.tencent.smtt.sdk.CookieManager;import com.tencent.smtt.sdk.CookieSyncManager;import com.tencent.smtt.sdk.ValueCallback;import com.tencent.smtt.sdk.WebChromeClient;import com.tencent.smtt.sdk.WebView;import com.tencent.smtt.sdk.WebViewClient;import org.greenrobot.eventbus.EventBus;import java.io.File;import java.util.ArrayList;import java.util.List;import butterknife.Bind;import butterknife.ButterKnife;import butterknife.OnClick;/** * 实名认证realnameAuth(参数).GuidanceController(String str) * 绑卡bindCard(参数).GuidanceController(String str) * 充值recharge(参数).GuidanceController(String str) * 提现withdraw(参数).GuidanceController(String str) * 接口: /ghbh5c/promptJump * 参数 type：realnameAuth，bindCard，recharge，withdraw * H华兴银行对接webview页面 * * @author wangxiaofa */public class GhbH5Activity extends WebViewActivity implements MyWebChomeClient.OpenFileChooserCallBack {    /**     * 正中间标题     **/    @Bind(R.id.tv_title)    TextView tv_title;    /**     * 左上角返回箭头     **/    @Bind(R.id.Btn_left)    TextView Btn_left;    /**     * X5webview     **/    @Bind(R.id.ghb_h5_web)    X5WebView ghb_h5_web;    private String ghbUrl = "";    private String mRiskassessment;    private static final int REQUEST_CODE_PICK_IMAGE = 0;    private static final int REQUEST_CODE_IMAGE_CAPTURE = 1;    private Intent mSourceIntent;    private ValueCallback<Uri> mUploadMsg;    public ValueCallback<Uri[]> mUploadMsgForAndroid5;    // permission Code    private static final int P_CODE_PERMISSIONS = 101;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_ghb_h5);        ButterKnife.bind(this);        GhbH5Model ghbH5Model = (GhbH5Model) getIntent().getExtras().get("h5_type");//获取type类型(判断是实名认证,绑卡,充值,提现)        mRiskassessment = (String) getIntent().getExtras().get("riskassessment");//风险评估返回键监听        assert ghbH5Model != null;        String type = ghbH5Model.getType();//获取type类型(判断是实名认证,绑卡,充值,提现)        ghbUrl = ghbH5Model.getWebUrl();        tv_title.setText(ghbH5Model.getTitle());        Btn_left.setVisibility(View.VISIBLE);        //判段url中是否包含 ‘？’        String webUrl;        //{"result":{"avaBalance":"0.0","bindCard":"N","earnedInterest":"0.0","frozen":"0.0","ghbAccount":"6236882280000055306","ghbAccountName":"郭举","ghbBranch":"广东华兴银行","idCard":"500242199309042051","investNewerTimes":"0","investTimes":"0","pendingInterest":"0.0","totalInterest":"0.0","totalTnvest":null,"uid":"ceshi450","withdrawTimes":"0"},"status":200,"msg":"成功"}        if (ghbUrl.contains("?")) {            webUrl = ghbUrl + "&token=" + userModel.getHeader() + "&clientid=" + "android-" + userModel.getAppVersionName();        } else {            webUrl = ghbUrl + "?token=" + userModel.getHeader() + "&clientid=" + "android-" + userModel.getAppVersionName();        }        //当type为 "ghbh5"时,跳转html页面(),调用JS中的BackNative()方法关闭页面        if ("ghbh5".equals(type)) {            ghb_h5_web.loadData(ghbH5Model.getWebUrl(), "text/html", "utf-8");            ghb_h5_web.addJavascriptInterface(new GhbJsInterface(this), type);        } else {            ghb_h5_web.loadUrl(webUrl);            if (!"NOLOAdJS".equals(type)) {                ghb_h5_web.addJavascriptInterface(new GhbJsInterface(this), type);            }        }        ghb_h5_web.setDownloadListener(new X5WebViewDownLoadListener(this));//监听下载文件事件触发此方法        //新增的方法适配webview文件上传 zhangyi        ghb_h5_web.setWebChromeClient(new MyWebChomeClient(this));        ghb_h5_web.setWebViewClient(new WebViewClient() {            @Override            public boolean shouldOverrideUrlLoading(WebView view, String url) {                view.loadUrl(url);                return true;            }            @Override            public void onPageFinished(WebView view, String url) {                if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {                    CookieSyncManager.getInstance().sync();                } else {                    CookieManager.getInstance().flush();                }            }        });        //新增上传图片读取权限        requestPermissionsAndroidM();        //新增路径修改        fixDirPath();    }    @OnClick(R.id.Btn_left)    void onClick(View view) {        switch (view.getId()) {            //返回按钮            case R.id.Btn_left:                //this.finish();                //风险投资返回键信息返回                if ("riskassessment".equals(mRiskassessment)) {                    EventBus.getDefault().post("riskassessment");                }                goBackPage();                break;        }    }    @Override    public boolean onKeyDown(int keyCode, KeyEvent event) {        if ((keyCode == KeyEvent.KEYCODE_BACK)) {            goBackPage();            return false;        } else {            return super.onKeyDown(keyCode, event);        }    }    /**     * 处理WebView 中多级页面返回问题     **/    private void goBackPage() {        if (ghb_h5_web.canGoBack()) {            ghb_h5_web.goBack(); //goBack()表示返回WebView的上一页面        } else {            //判断隐藏软键盘是否弹出            WindowManager.LayoutParams params = getWindow().getAttributes();            if (params.softInputMode == WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE) {                // 隐藏软键盘                getWindow().setSoftInputMode(                        WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);                params.softInputMode = WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN;            }            //结束退出程序            finish();        }    }    @Override    protected void onDestroy() {        if (ghb_h5_web != null) {            ghb_h5_web.setVisibility(View.GONE);            ghb_h5_web.destroy();        }        super.onDestroy();        finish();    }    @Override    public void openFileChooserCallBack(ValueCallback<Uri> uploadMsg, String acceptType) {        mUploadMsg = uploadMsg;        showOptions();    }    @Override    public boolean openFileChooserCallBackAndroid5(WebView webView, ValueCallback<Uri[]> filePathCallback, WebChromeClient.FileChooserParams fileChooserParams) {        mUploadMsgForAndroid5 = filePathCallback;        showOptions();        return false;    }    //activity申请权限回调    @Override    public void onActivityResult(int requestCode, int resultCode, Intent data) {        if (resultCode != Activity.RESULT_OK) {            if (mUploadMsg != null) {                mUploadMsg.onReceiveValue(null);            }            if (mUploadMsgForAndroid5 != null) {         // for android 5.0+                mUploadMsgForAndroid5.onReceiveValue(null);            }            return;        }        switch (requestCode) {            case REQUEST_CODE_IMAGE_CAPTURE:            case REQUEST_CODE_PICK_IMAGE: {                try {                    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {                        if (mUploadMsg == null) {                            return;                        }                        String sourcePath = ImageUtil.retrievePath(this, mSourceIntent, data);                        if (TextUtils.isEmpty(sourcePath) || !new File(sourcePath).exists()) {                            break;                        }                        Uri uri = Uri.fromFile(new File(sourcePath));                        mUploadMsg.onReceiveValue(uri);                    } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {                        if (mUploadMsgForAndroid5 == null) {        // for android 5.0+                            return;                        }                        String sourcePath = ImageUtil.retrievePath(this, mSourceIntent, data);                        if (TextUtils.isEmpty(sourcePath) || !new File(sourcePath).exists()) {                            break;                        }                        Uri uri = Uri.fromFile(new File(sourcePath));                        mUploadMsgForAndroid5.onReceiveValue(new Uri[]{uri});                    }                } catch (Exception e) {                    e.printStackTrace();                }                break;            }        }    }    //弹出选择对话框    public void showOptions() {        AlertDialog.Builder alertDialog = new AlertDialog.Builder(this);        alertDialog.setOnCancelListener(new DialogOnCancelListener());        alertDialog.setTitle("请选择操作");        // gallery, camera.        String[] options = {"相册", "拍照"};        alertDialog.setItems(options, new DialogInterface.OnClickListener() {                    @Override                    public void onClick(DialogInterface dialog, int which) {                        if (which == 0) {                            if (PermissionUtil.isOverMarshmallow()) {                                if (!PermissionUtil.isPermissionValid(GhbH5Activity.this, Manifest.permission.READ_EXTERNAL_STORAGE)) {                                    Toast.makeText(GhbH5Activity.this,                                            "请去\"设置\"中开启本应用的图片媒体访问权限",                                            Toast.LENGTH_SHORT).show();                                    restoreUploadMsg();                                    requestPermissionsAndroidM();                                    return;                                }                            }                            try {                                mSourceIntent = ImageUtil.choosePicture();                                startActivityForResult(mSourceIntent, REQUEST_CODE_PICK_IMAGE);                            } catch (Exception e) {                                e.printStackTrace();                                Toast.makeText(GhbH5Activity.this,                                        "请去\"设置\"中开启本应用的图片媒体访问权限",                                        Toast.LENGTH_SHORT).show();                                restoreUploadMsg();                            }                        } else {                            if (PermissionUtil.isOverMarshmallow()) {                                if (!PermissionUtil.isPermissionValid(GhbH5Activity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {                                    Toast.makeText(GhbH5Activity.this,                                            "请去\"设置\"中开启本应用的图片媒体访问权限",                                            Toast.LENGTH_SHORT).show();                                    restoreUploadMsg();                                    requestPermissionsAndroidM();                                    return;                                }                                if (!PermissionUtil.isPermissionValid(GhbH5Activity.this, Manifest.permission.CAMERA)) {                                    Toast.makeText(GhbH5Activity.this,                                            "请去\"设置\"中开启本应用的相机权限",                                            Toast.LENGTH_SHORT).show();                                    restoreUploadMsg();                                    requestPermissionsAndroidM();                                    return;                                }                            }                            try {                                mSourceIntent = ImageUtil.takeBigPicture();                                startActivityForResult(mSourceIntent, REQUEST_CODE_IMAGE_CAPTURE);                            } catch (Exception e) {                                e.printStackTrace();                                Toast.makeText(GhbH5Activity.this,                                        "请去\"设置\"中开启本应用的相机和图片媒体访问权限",                                        Toast.LENGTH_SHORT).show();                                restoreUploadMsg();                            }                        }                    }                }        );        alertDialog.show();    }    private class DialogOnCancelListener implements DialogInterface.OnCancelListener {        @Override        public void onCancel(DialogInterface dialogInterface) {            restoreUploadMsg();        }    }    private void restoreUploadMsg() {        if (mUploadMsg != null) {            mUploadMsg.onReceiveValue(null);            mUploadMsg = null;        } else if (mUploadMsgForAndroid5 != null) {            mUploadMsgForAndroid5.onReceiveValue(null);            mUploadMsgForAndroid5 = null;        }    }    private void requestPermissionsAndroidM() {        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {            List<String> needPermissionList = new ArrayList<>();            needPermissionList.add(Manifest.permission.WRITE_EXTERNAL_STORAGE);            needPermissionList.add(Manifest.permission.READ_EXTERNAL_STORAGE);            needPermissionList.add(Manifest.permission.CAMERA);            PermissionUtil.requestPermissions(GhbH5Activity.this, P_CODE_PERMISSIONS, needPermissionList);        } else {            return;        }    }    //权限回调    @Override    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {        switch (requestCode) {            case P_CODE_PERMISSIONS:                requestResult(permissions, grantResults);                restoreUploadMsg();                break;            default:                super.onRequestPermissionsResult(requestCode, permissions, grantResults);        }    }    public void requestResult(String[] permissions, int[] grantResults) {        ArrayList<String> needPermissions = new ArrayList<String>();        for (int i = 0; i < grantResults.length; i++) {            if (grantResults[i] != PackageManager.PERMISSION_GRANTED) {                if (PermissionUtil.isOverMarshmallow()) {                    needPermissions.add(permissions[i]);                }            }        }        if (needPermissions.size() > 0) {            StringBuilder permissionsMsg = new StringBuilder();            for (int i = 0; i < needPermissions.size(); i++) {                String strPermissons = needPermissions.get(i);                if (Manifest.permission.WRITE_EXTERNAL_STORAGE.equals(strPermissons)) {                    permissionsMsg.append("," + getString(R.string.permission_storage));                } else if (Manifest.permission.READ_EXTERNAL_STORAGE.equals(strPermissons)) {                    permissionsMsg.append("," + getString(R.string.permission_storage));                } else if (Manifest.permission.CAMERA.equals(strPermissons)) {                    permissionsMsg.append("," + getString(R.string.permission_camera));                }            }            String strMessage = "请允许使用\"" + permissionsMsg.substring(1).toString() + "\"权限, 以正常使用APP的所有功能.";            Toast.makeText(GhbH5Activity.this, strMessage, Toast.LENGTH_SHORT).show();        } else {            return;        }    }    private void fixDirPath() {        String path = ImageUtil.getDirPath();        File file = new File(path);        if (!file.exists()) {            file.mkdirs();        }    }}