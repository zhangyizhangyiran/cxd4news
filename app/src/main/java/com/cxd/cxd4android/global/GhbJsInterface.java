package com.cxd.cxd4android.global;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.util.Log;import android.webkit.JavascriptInterface;import android.widget.Toast;import com.cxd.cxd4android.activity.subactivity.MeMyGhbIdentityActivity;import com.cxd.cxd4android.activity.subactivity.MeWithdrawActivity;import com.cxd.cxd4android.interfaces.ILoginCallBack;import com.cxd.cxd4android.interfaces.IUpdataGhbUserExt;import com.cxd.cxd4android.interfaces.IUpdataRechargeCallBack;import com.cxd.cxd4android.interfaces.IUpdataWithdrawCallBack;import com.cxd.cxd4android.interfaces.SHBChangeCardCallBack;import com.cxd.cxd4android.model.GhbBindCardModel;import com.cxd.cxd4android.model.GhbIdentityModel;import com.cxd.cxd4android.presenter.LoadingView;import com.cxd.cxd4android.presenter.MeMyGhbAccountPresenter;import com.google.gson.Gson;import org.greenrobot.eventbus.EventBus;import java.util.HashMap;import java.util.Map;/** * Created by wangxiaofa on 16/10/26. * Js调用android原生类 * 对接华兴银行的jsinterfce */public class GhbJsInterface implements LoadingView {    /*绑定object对象*/    private    Activity activity;    private LocalUserModel userModel;    private MeMyGhbAccountPresenter meMyGhbAccountPresenter;    public GhbJsInterface(Context context) {        this.activity = (Activity) context;        userModel = new LocalUserModel();        meMyGhbAccountPresenter = new MeMyGhbAccountPresenter(this);    }    /**     * SHB 银行卡绑卡成功     */    @JavascriptInterface    public void shresetBankCardSuccess() {        activity.finish();        EventBus.getDefault().post(new SHBChangeCardCallBack("1"));    }    /**     * SHB 银行卡绑卡失败     */    @JavascriptInterface    public void shresetBankCardFaile() {        activity.finish();    }    /**     * 新增加风险等级评估     */    @JavascriptInterface    public void MakeMoney() {        activity.finish();        if ("1".equals(Constant.SHB_PING_GUO)) {            EventBus.getDefault().post(123456);        } else if ("2".equals(Constant.SHB_PING_GUO)) {            EventBus.getDefault().post(new ILoginCallBack(1));//跳转投资        }    }    /*    * Js调用android原生方法    * @JavascriptInterface必不可少    * 实名认证realnameAuth(参数).GuidanceController(String str)    *   绑卡 bindCard(参数).GuidanceController(String str)    *   充值 recharge(参数).GuidanceController(String str)    *   提现 withdraw(参数).GuidanceController(String str)    *   /ghbh5c/promptJump    *   参数 type：realnameAuth，bindCard，recharge，withdraw    *     * withdrawGuide.GuidanceController('withdrawGuide')">实名认证图文指引     *rechargeGuideRealtime.GuidanceController(‘rechargeGuideRealtime’)">图文指引>>     *"rechargeGuideT.GuidanceController('rechargeGuideT')">图文指引>>     */    @JavascriptInterface    public void GuidanceController(String str) {        Constant.guideType = str;        Log.i("GhbJsInterface->", "GhbJsInterface--" + str);        if ("realnameAuth".equals(str)) {            /**             * 请求华兴开户数据             */            if ("CHECKED".equals(userModel.getYeepayAuth())) {//老用户                Map<String, String> map = new HashMap<String, String>();                map.put("userId", userModel.getid());                map.put("realName", userModel.getrealname());                map.put("idCard", userModel.getidCard());                map.put("phoneNo", userModel.getmobileNumber() + "");//identityinfo_et_bind_phone.getText().toString().trim()                map.put("email", "");                Gson gson = new Gson();                String strn = gson.toJson(map);                meMyGhbAccountPresenter.loadGhbIdentity(strn);            } else {                Intent intent = new Intent(activity, MeMyGhbIdentityActivity.class);                activity.startActivity(intent);                activity.finish(); //关闭当前页            }        } else if ("bindCard".equals(str)) {            /**             * 请求绑定银行卡数据             */            Map<String, String> map = new HashMap<String, String>();            map.put("userId", userModel.getid());            Gson gson = new Gson();            String strn = gson.toJson(map);            meMyGhbAccountPresenter.loadGhbBankCard(strn);        } else if ("recharge".equals(str)) {        } else if ("withdraw".equals(str)) {            Intent intent = new Intent(activity, MeWithdrawActivity.class);            activity.startActivity(intent);            activity.finish(); //关闭当前页        } else if ("withdrawGuide".equals(str)) {            new GhbGlobalData(activity).setWdGUideImgInfo();        } else if ("rechargeGuideRealtime".equals(str)) {            new GhbGlobalData(activity).setRgGUideRealTime();        } else if ("rechargeGuideT".equals(str)) {            new GhbGlobalData(activity).setRgGUideDelayedOne();        } else if ("ghbbindCard".equals(str)) {            Toast.makeText(activity, "绑卡成功", Toast.LENGTH_SHORT).show();            userModel.setGhbBindCard("Y");            /**             * 修改华兴绑卡状态             *///            Map<String, String> map = new HashMap<String, String>();//            map.put("uid", userModel.getid());//            Gson gson = new Gson();//            String strn = gson.toJson(map);            meMyGhbAccountPresenter.loadUpdateBankCardStatus(userModel.getid());            activity.finish();        }    }    /*    * Js调用android原生方法    * @JavascriptInterface必不可少    * 返回商户    * ghbh5(参数).BackNative()    */    private String guideType = Constant.guideType;    @JavascriptInterface    public void BackNative() {        Log.i("GhbJsInterface->", "BackNative--" + guideType);        if ("realnameAuth".equals(guideType)) {            EventBus.getDefault().post(new IUpdataGhbUserExt(guideType));        } else if ("bindCard".equals(guideType)) {            EventBus.getDefault().post(new IUpdataGhbUserExt(guideType));        } else if ("recharge".equals(guideType)) {            EventBus.getDefault().post(new IUpdataRechargeCallBack(guideType));        } else if ("withdraw".equals(guideType)) {            EventBus.getDefault().post(new IUpdataWithdrawCallBack(guideType));        }        activity.finish();    }    @Override    public void getDataSuccess(Object model) {        if (model.getClass().equals(GhbIdentityModel.class)) { //开户            GhbIdentityModel ghbIdentityModel = (GhbIdentityModel) model;            if (Constant.STATUS_SUCCESS.equals(ghbIdentityModel.getStatus())) {//                weburl = ghbIdentityModel.getResult().getHtml();//                WebViewFragment();                new GhbGlobalData(activity).setGhbRlNmAtWeb(ghbIdentityModel);                activity.finish(); //关闭当前页            } else if (Constant.STATUS_FAILED.equals(ghbIdentityModel.getResult())) {                Toast.makeText(activity, "加载失败", Toast.LENGTH_SHORT).show();            }        } else if (model.getClass().equals(GhbBindCardModel.class)) {//绑卡            GhbBindCardModel ghbBindCardModel = (GhbBindCardModel) model;            if (Constant.STATUS_SUCCESS.equals(ghbBindCardModel.getStatus())) {                //Todo 绑卡                new GhbGlobalData(activity).setGhbBindCardData(ghbBindCardModel.getResult().getHtml());                activity.finish(); //关闭当前页            } else if (Constant.STATUS_FAILED.equals(ghbBindCardModel.getStatus())) {                Toast.makeText(activity, "加载失败", Toast.LENGTH_SHORT).show();            }        }    }    @Override    public void getDataFail(String msg) {        Toast.makeText(activity, "加载失败", Toast.LENGTH_SHORT).show();    }    @Override    public void showLoading() {    }    @Override    public void hideLoading() {    }}